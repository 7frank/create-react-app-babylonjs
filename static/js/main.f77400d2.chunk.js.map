{"version":3,"sources":["layout/reducers/index.js","layout/components/index.js","defaultPlayground.js","dragNdrop.js","withProps/reducers/index.js","SingleAxisRotateMeshBehavior.js","withProps/components/WithProps.js","ScaledModelWithProgress.js","withModel.js","withVR.js","withSkybox.js","with2DUI.js","nonDeclarative.js","home/components/index.js","routes.js","App.js","serviceWorker.js","rootReducer.js","store.js","index.js"],"names":["initialState","showSidebar","layoutReducer","state","action","type","Layout","sideBarClassNames","classNames","this","props","sideBarCollapseClassNames","className","id","exact","to","process","activeClassName","icon","Home","TriangleRight","href","MarkGithub","color","expand","onClick","onToggleSidebar","navbar","style","marginTop","children","Component","LayoutConnected","withRouter","connect","layout","dispatch","DefaultPlayground","antialias","adaptToDeviceRatio","canvasId","name","position","Vector3","setTarget","Zero","intensity","direction","Up","diameter","segments","width","height","subdivisions","validateDrag","targetPosition","Math","max","abs","x","z","GROUND_SIZE","dragNdrop","engineOptions","preserveDrawingBuffer","stencil","clearColor","Color3","alpha","beta","radius","target","setPosition","lowerBetaLimit","upperBetaLimit","PI","lowerRadiusLimit","specularColor","Black","diffuseColor","emissiveColor","Red","dragPlaneNormal","size","Green","Blue","thickness","tesselation","Purple","clockwise","lightsDim","withPropsReducer","full","SingleAxisRotateMeshBehavior","scene","onBeforeRenderObservable","remove","handler","onParented","engine","parent","add","axis","Axis","X","rotationProperty","Z","deltaTimeInMillis","getDeltaTime","hostInstance","rotation","rpm","defaultProps","Y","withBabylonJS","WithProps","handleClockwiseChange","onToggleRotation","handleDimmerChange","onToggleLights","htmlFor","padding","onChange","checked","checkedIcon","paddingLeft","uncheckedIcon","Yellow","WithPropsConnected","withProps","toggleLights","toggleRotation","ScaledModelWithProgress","loadProgress","Fragment","scaleToDimension","scaleTo","onLoadProgress","evt","modelLoadProgress","lengthComputable","loaded","total","estimatedFileSize","setState","onModelLoaded","model","sceneContext","center","rootUrl","sceneFilename","pluginExtension","fileExtension","modelRotation","progressRotation","key","depth","scaling","setPivotMatrix","Matrix","Translation","setPreTransformMatrix","progressBarColor","withScene","WithModel","avocadoYPos","avocadoScaling","moveAvocadoUp","bind","moveAvocadoDown","increaseAvocadoSize","decreaseAvocadoSize","mesh","meshes","actionManager","ActionManager","registerAction","SetValueAction","OnPointerOverTrigger","material","OnPointerOutTrigger","baseUrl","ArrowUp","ArrowDown","minZ","FromInts","WithVR","modelRotationY","spinModelClockwise","spinModelCounterClockwise","onMeshPicked","console","log","ArrowLeft","ArrowRight","wheelPrecision","mapSize","useBlurExponentialShadowMap","blurKernel","shadowCasters","flat","webVROptions","createDeviceOrientationCamera","teleportEnvironmentGround","enableInteractions","options","enableGroundShadow","groundYBias","mainColor","FromHexString","globalIndex","SkyboxScenes","texture","WithSkybox","useState","skyboxIndex","setIndex","length","margin","Array","from","_","index","map","number","text","onPointerClickObservable","With2DUI","plane","undefined","showModal","clickMeshName","allowedMeshes","sceneClearColor","Color4","meshPicked","setPlane","indexOf","clickedMeshColor","clickedMeshName","toHexString","_scene","getMeshByName","dispose","filter","hideModal","keys","push","frame","value","animationClose","Animation","ANIMATIONTYPE_FLOAT","ANIMATIONLOOPMODE_CONSTANT","setKeys","easingFunction","ExponentialEase","setEasingMode","EasingFunction","EASINGMODE_EASEINOUT","setEasingFunction","animations","beginAnimation","activeCamera","window","setTimeout","forwardRayDirection","getForwardRay","scale","fov","lookAt","fontFamily","onViewMatrixChangedObservable","camera","forwardRay","clone","onCreated","createForParentMesh","generateMipMaps","samplingMode","Texture","TRILINEAR_SAMPLINGMODE","background","scaleY","scaleX","cornerRadius","verticalAlignment","Control","HORIZONTAL_ALIGNMENT_CENTER","horizontalAlignment","HORIZONTAL_ALIGNMENT_LEFT","isVertical","fontSize","fontStyle","textHorizontalAlignment","textVerticalAlignment","VERTICAL_ALIGNMENT_CENTER","onPointerDownObservable","HORIZONTAL_ALIGNMENT_RIGHT","textWrapping","VERTICAL_ALIGNMENT_TOP","paddingTop","allowedMesh","paddingBottom","paddingRight","deleteSelectedMesh","onSceneMount","e","canvas","FreeCamera","speed","activeCameras","attachControl","HemisphericLight","pbr","PBRMetallicRoughnessMaterial","environmentTexture","CubeTexture","CreateFromPrefilteredData","i","j","sphereMat","metallic","roughness","baseColor","White","sphere","Mesh","CreateSphere","y","cubeMat","box","CreateBox","knot","CreateTorusKnot","set","pipeline","DefaultRenderingPipeline","depthOfFieldBlurLevel","DepthOfFieldEffectBlurLevel","Medium","depthOfFieldEnabled","depthOfField","focalLength","fStop","focusDistance","moveFocusDistance","bgCamera","ArcRotateCamera","layerMask","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","layer","UiPanel","StackPanel","addControl","min","forEach","param","header","TextBlock","toFixed","slider","Slider","minimum","maximum","onValueChangedObservable","v","sin","Date","getTime","getEngine","runRenderLoop","render","NonDeclarative","src","alt","routes","sidebarCollapsed","path","component","DragNDrop","App","history","Boolean","location","hostname","match","rootReducer","combineReducers","router","connectRouter","createBrowserHistory","store","createStore","compose","applyMiddleware","routerMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f77400d2.chunk.js","sourcesContent":["export const toggleSidebar = () => ({\r\n  type: 'TOGGLE_SIDEBAR'\r\n});\r\n\r\nconst initialState = {\r\n  showSidebar: true\r\n};\r\n\r\nconst layoutReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_SIDEBAR':\r\n      return {\r\n        ...state,\r\n        showSidebar: !state.showSidebar\r\n      }\r\n    default: // never\r\n      return state\r\n  }\r\n}\r\n  \r\nexport default layoutReducer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Navbar, Nav, NavItem } from 'reactstrap';\r\nimport Octicon, { Home, TriangleRight, MarkGithub } from '@githubprimer/octicons-react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames'\r\n\r\nimport { toggleSidebar } from '../reducers'\r\nimport './layout.css'\r\n\r\nclass Layout extends Component {\r\n\r\n    render() {\r\n        var sideBarClassNames = classNames({\r\n            'active': !this.props.showSidebar\r\n        })\r\n\r\n        var sideBarCollapseClassNames = classNames(\r\n            {'active': !this.props.showSidebar},\r\n            'navbar-btn'\r\n        )\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"wrapper\">\r\n                    <nav id=\"sidebar\" className={sideBarClassNames}>\r\n                        <div className=\"sidebar-header\">\r\n                            <h3 className=\"sidebar-h3\">React + BabylonJS</h3>\r\n                        </div>\r\n\r\n                        <ul className=\"list-unstyled components\">\r\n                            <h3 className=\"sidebar-h3\">Examples</h3>\r\n                            <NavItem>\r\n                                <NavLink exact={true} to={`${process.env.PUBLIC_URL}/`} activeClassName=\"active\" className=\"nav-link\">\r\n                                        <Octicon icon={Home}/> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/defaultPlayground`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> Default Playground\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/withProps`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> Props\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/dragNdrop`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> Drag'n'drop\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/withModel`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> Model\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/withVR`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> VR\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/with2DUI`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> Panel (+2D UI)\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/withSkybox`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> Skybox (+3D panel)\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink to={`${process.env.PUBLIC_URL}/nonDeclarative`} activeClassName=\"active\" className=\"nav-link\">\r\n                                    <Octicon icon={ TriangleRight }/> Non-Declarative\r\n                                </NavLink>\r\n                            </NavItem>                            \r\n                        </ul>\r\n                        <ul className=\"list-unstyled CTAs\">\r\n                            <li>\r\n                                <a href=\"https://github.com/brianzinn/create-react-app-babylonjs\" className=\"download\">this project <Octicon icon={ MarkGithub }/></a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"https://github.com/brianzinn/react-babylonjs\" className=\"download\">react-babylonjs <Octicon icon={ MarkGithub }/></a>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    <div id=\"content\">\r\n                        <Navbar color=\"dark\" className=\"navbar-dark\" expand>\r\n                            <button type=\"button\" id=\"sidebarCollapse\" className={sideBarCollapseClassNames} onClick={this.props.onToggleSidebar}>\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                            </button>\r\n                        \r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink exact={true} to={`${process.env.PUBLIC_URL}/`} activeClassName=\"active\" className=\"nav-link\">Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/defaultPlayground`} activeClassName=\"active\" className=\"nav-link\">Default Playground</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/withProps`} activeClassName=\"active\" className=\"nav-link\">Props</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/dragNdrop`} activeClassName=\"active\" className=\"nav-link\">Drag 'n' Drop</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/withModel`} activeClassName=\"active\" className=\"nav-link\">Model</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/withVR`} activeClassName=\"active\" className=\"nav-link\">VR</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/withSkybox`} activeClassName=\"active\" className=\"nav-link\">Skybox (+3D panel)</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/with2DUI`} activeClassName=\"active\" className=\"nav-link\">UI (+2D panel)</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink to={`${process.env.PUBLIC_URL}/nonDeclarative`} activeClassName=\"active\" className=\"nav-link\">Non-Declarative</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Navbar>\r\n                        <div style={{marginTop: '-35px'}}>\r\n                            {this.props.children}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLayout.propTypes = {\r\n    sidebarCollapsed: PropTypes.bool.isRequired,\r\n    onToggleSidebar: PropTypes.func.isRequired\r\n  }\r\n  \r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onToggleSidebar: () => {\r\n           dispatch(toggleSidebar())\r\n        }\r\n    }\r\n}\r\n  \r\nconst mapStateToProps = state => {\r\nreturn state.layout\r\n}\r\n  \r\nconst LayoutConnected = withRouter(\r\n    connect(mapStateToProps,mapDispatchToProps)(Layout)\r\n)\r\n  \r\nexport default LayoutConnected\r\n","import React from 'react'\r\nimport { Engine, Scene } from 'react-babylonjs'\r\nimport { Vector3 } from '@babylonjs/core';\r\nimport { PrismCode } from 'react-prism';\r\n\r\nconst DefaultPlayground = () => (\r\n  <div className=\"row\">\r\n    <div className=\"col-xs-12 col-md-6\">\r\n      <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\">\r\n        <Scene>\r\n          <freeCamera name=\"camera1\" position={new Vector3(0, 5, -10)} setTarget={[Vector3.Zero()]} />\r\n          <hemisphericLight name=\"light1\" intensity={0.7} direction={Vector3.Up()} />\r\n          <sphere name=\"sphere1\" diameter={2} segments={16} position={new Vector3(0, 1, 0)} />    \r\n          <ground name=\"ground1\" width={6} height={6} subdivisions={2}  />\r\n        </Scene>\r\n      </Engine>\r\n    </div>\r\n    <div className=\"col-xs-12 col-md-6\">\r\n      <pre>\r\n          <PrismCode className=\"language-jsx\">\r\n{`<Engine>\r\n  <Scene id=\"sample-canvas\">\r\n    <freeCamera name=\"camera1\"\r\n      position={new Vector3(0, 5, -10)} target={Vector3.Zero()} />\r\n    <hemisphericLight name=\"light1\"\r\n      intensity={0.7} direction={Vector3.Up()} />\r\n    <sphere name=\"sphere1\"\r\n      diameter={2} segments={16} position={new Vector3(0, 1, 0)} />\r\n    <ground name=\"ground1\"\r\n      width={6} height={6} subdivisions={2} />\r\n  </Scene>\r\n</Engine>`}\r\n          </PrismCode>\r\n        </pre>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default DefaultPlayground","import React from 'react';\r\nimport { Engine, Scene } from 'react-babylonjs';\r\nimport { Vector3, Color3 } from '@babylonjs/core';\r\n\r\n// start copy from https://www.babylonjs.com/demos/dragndrop/dragdrop.js\r\nconst GROUND_SIZE = 1000;\r\nconst validateDrag = (targetPosition) => {\r\n  return Math.max(Math.abs(targetPosition.x), Math.abs(targetPosition.z)) <= (GROUND_SIZE / 2) - 10; // should be -15 for torus\r\n}\r\n\r\nfunction dragNdrop() {  \r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12 col-md-12\">\r\n          <Engine antialias={true} engineOptions={{preserveDrawingBuffer:true, stencil:true}} canvasId=\"sample-canvas\">\r\n            <Scene clearColor={new Color3(0, 0, 0)}>\r\n            <pointLight name='omni' position={new Vector3(0, 50, 0)} />\r\n            <arcRotateCamera name='camera' alpha={0} beta={0} radius={10} target={Vector3.Zero()} setPosition={[new Vector3(20, 200, 400)]}\r\n              lowerBetaLimit={0.1} upperBetaLimit={(Math.PI / 2) * 0.99} lowerRadiusLimit={150}\r\n            />\r\n\r\n            <ground name='ground' width={GROUND_SIZE} height={GROUND_SIZE} subdivisions={1}>\r\n              <standardMaterial name='groundMat' specularColor={Color3.Black()} />\r\n            </ground>\r\n\r\n            <sphere name='red' diameter={20} segments={32} position={new Vector3(-100, 10, 0)}>\r\n              <standardMaterial name='redMat' diffuseColor={new Color3(0.4, 0.4, 0.4)} specularColor={new Color3(0.4, 0.4, 0.4)} emissiveColor={Color3.Red()} />\r\n              <pointerDragBehavior dragPlaneNormal={new Vector3(0,1,0)} validateDrag={validateDrag} />\r\n            </sphere>\r\n\r\n            <box name='green' size={20} position={new Vector3(0, 11, -100)}>\r\n              <standardMaterial name='greenMat' diffuseColor={new Color3(0.4, 0.4, 0.4)} specularColor={new Color3(0.4, 0.4, 0.4)} emissiveColor={Color3.Green()} />\r\n              <pointerDragBehavior dragPlaneNormal={new Vector3(0,1,0)} validateDrag={validateDrag} />\r\n            </box>\r\n\r\n            <box name='blue' size={20} position={new Vector3(100, 11, 0)}>\r\n              <standardMaterial name='greenMat' diffuseColor={new Color3(0.4, 0.4, 0.4)} specularColor={new Color3(0.4, 0.4, 0.4)} emissiveColor={Color3.Blue()} />\r\n              <pointerDragBehavior dragPlaneNormal={new Vector3(0,1,0)} validateDrag={validateDrag} />\r\n            </box>\r\n\r\n            <torus name='torus' diameter={30} thickness={10} tesselation={32} position={new Vector3(0, 10, 100)}>\r\n              <standardMaterial name='torusMat' diffuseColor={new Color3(0.4, 0.4, 0.4)} specularColor={new Color3(0.4, 0.4, 0.4)} emissiveColor={Color3.Purple()} />\r\n              <pointerDragBehavior dragPlaneNormal={new Vector3(0,1,0)} validateDrag={validateDrag} />\r\n            </torus>\r\n            </Scene>\r\n          </Engine>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default dragNdrop","export const toggleLights = (full) => ({\r\n  type: 'TOGGLE_LIGHTS',\r\n  full\r\n});\r\n\r\nexport const toggleRotation = (clockwise) => ({\r\n  type: 'TOGGLE_ROTATION',\r\n  clockwise\r\n});\r\n\r\nconst initialState = {\r\n  clockwise: true,\r\n  lightsDim: false\r\n};\r\n\r\nconst withPropsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'TOGGLE_ROTATION':\r\n      return {\r\n        ...state,\r\n        clockwise: action.clockwise\r\n      }\r\n    case 'TOGGLE_LIGHTS':\r\n      return {\r\n        ...state,\r\n        lightsDim: !action.full\r\n      }\r\n    default: // never\r\n      return state\r\n  }\r\n}\r\n  \r\nexport default withPropsReducer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { HostWithEvents, withBabylonJS } from 'react-babylonjs'\r\nimport { Axis } from '@babylonjs/core'\r\n\r\nclass SingleAxisRotateMeshBehavior extends Component {\r\n\r\n    componentWillUnmount() {\r\n      this.scene.onBeforeRenderObservable.remove(this.handler);\r\n    }\r\n\r\n    render() {\r\n      return (<HostWithEvents {...this.props} onParented={(scene, engine, parent) => {\r\n        this.scene = scene;\r\n        this.handler = scene.onBeforeRenderObservable.add(() => {\r\n          // TODO: if parent.hostInstance.rotationQuaternion then .rotate(xxx, axis)\r\n          switch(this.props.axis) {\r\n            case Axis.X:\r\n              this.rotationProperty = 'x';\r\n              break;\r\n            case Axis.Z:\r\n              this.rotationProperty = 'z';\r\n              break;\r\n            default:\r\n              this.rotationProperty = 'y';\r\n              break;\r\n          }\r\n          let deltaTimeInMillis = engine.getDeltaTime()\r\n          parent.hostInstance.rotation[this.rotationProperty] += ((this.props.rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\r\n        })\r\n        }      \r\n        \r\n      }/>)\r\n    }\r\n}\r\n\r\n// Specifies the default values for props:\r\nSingleAxisRotateMeshBehavior.defaultProps = {\r\n  rpm: 1,\r\n  axis: Axis.Y\r\n};\r\n\r\nSingleAxisRotateMeshBehavior.propTypes = {\r\n  rpm: PropTypes.number,\r\n  axis: PropTypes.object\r\n};\r\n\r\nexport default withBabylonJS(SingleAxisRotateMeshBehavior)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Engine, Scene } from 'react-babylonjs'\r\nimport { Vector3, Axis, Color3 } from '@babylonjs/core';\r\nimport { PrismCode } from 'react-prism';\r\nimport Switch from \"react-switch\";\r\n\r\nimport { toggleLights, toggleRotation } from '../reducers';\r\nimport SingleAxisRotateMeshBehavior from '../../SingleAxisRotateMeshBehavior'\r\n\r\nclass WithProps extends Component\r\n{\r\n  handleClockwiseChange = (clockwise) => {\r\n    this.props.onToggleRotation(clockwise);\r\n  }\r\n\r\n  handleDimmerChange = (full) => {\r\n    this.props.onToggleLights(full);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-3 col-lg-3 align-top\">\r\n            <label htmlFor=\"dimmer-switch\">\r\n              <span style={{padding: '5px'}}>Lights:</span>\r\n              <Switch\r\n                onChange={this.handleDimmerChange}\r\n                checked={!this.props.lightsDim}\r\n                checkedIcon={<div style={{ paddingLeft: '2px', color: 'white'}}>full</div>}\r\n                uncheckedIcon={<div style={{ paddingLeft: '2px', color: 'white'}}>dim</div>}\r\n                className=\"react-switch\"\r\n                id=\"dimmer-switch\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"col-xs-3 col-lg-3 align-top\">\r\n            <label htmlFor=\"rotation-switch\">\r\n            <span className=\"align-top\" style={{padding: '5px'}}>Clockwise:</span>\r\n              <Switch\r\n                onChange={this.handleClockwiseChange}\r\n                checked={this.props.clockwise}\r\n                className=\"react-switch\"\r\n                id=\"rotation-switch\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"col-xs-6\">\r\n            <span className=\"text-muted\">[<strong>props</strong> are persisted in this example when you return on same visit (or HMR))]</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\">\r\n              <Scene>\r\n                <freeCamera name=\"camera1\" position={new Vector3(0, 5, -12)} setTarget={{target: new Vector3(0, 1, 0)}} />\r\n                <hemisphericLight name=\"light1\" intensity={this.props.lightsDim ? 0.3 : 0.7} direction={Vector3.Up()} />\r\n                <box name=\"box\" size={4} position={new Vector3(0, 1, 0)}>\r\n                  <SingleAxisRotateMeshBehavior rpm={this.props.clockwise ? 12 : -12 } axis={Axis.Y} />\r\n                  <standardMaterial name=\"mat1\" diffuseColor={Color3.Yellow()} specularColor={Color3.Black()} />\r\n                </box>\r\n              </Scene>\r\n            </Engine>\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <pre>\r\n                <PrismCode className=\"language-jsx\">\r\n{` <Scene id=\"sample-canvas\">\r\n  <freeCamera name=\"camera1\"\r\n    position={new Vector3(0, 5, -10)} target={Vector3.Zero()} />\r\n  <hemisphericLight name=\"light1\" direction={Vector3.Up()}\r\n    intensity={this.props.lightsDim ? 0.3 : 0.7} />\r\n  <box name=\"box\" size={4} position={new Vector3(0, 1, 0)}>\r\n    <standardMaterial name=\"yellow-mat\"\r\n      diffuseColor={Color3.Yellow()} specularColor={Color3.Black()} />\r\n    <RotateMeshBehavior rpm={this.props.clockwise ? 12 : -12 } axis={Axis.Y} />\r\n  </box>\r\n</Scene>`}\r\n                </PrismCode>\r\n              </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nWithProps.propTypes = {\r\n  clockwise: PropTypes.bool.isRequired,\r\n  lightsDim: PropTypes.bool.isRequired,\r\n  onToggleLights: PropTypes.func.isRequired,\r\n  onToggleRotation: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onToggleLights: (full) => {\r\n      dispatch(toggleLights(full))\r\n    },\r\n    onToggleRotation: (clockwise) => {\r\n      dispatch(toggleRotation(clockwise))\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return state.withProps\r\n}\r\n\r\nconst WithPropsConnected = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WithProps)\r\n\r\nexport default WithPropsConnected","import React, { Component } from 'react'\r\n\r\nimport { Model, Box, StandardMaterial, Mesh, withScene } from 'react-babylonjs'\r\nimport { Vector3, Matrix, Color3 } from '@babylonjs/core';\r\n\r\n// try with later versions of RHL to get hooks working here:\r\n// const [loadProgress, updateProgress] = useState(0)\r\nclass ScaledModelWithProgress extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            loadProgress: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Model\r\n                    scaleToDimension={this.props.scaleTo}\r\n                    onLoadProgress={(evt) => {\r\n                        let modelLoadProgress = evt.lengthComputable ?\r\n                            evt.loaded / evt.total :\r\n                            evt.loaded / (this.props.estimatedFileSize * 0.085) /* provided fileSize is not for 'view' manifest, a bad guess often, but generally factor ~0.085 smaller  */\r\n                    \r\n                        this.setState({loadProgress: modelLoadProgress})\r\n                        \r\n                    }}\r\n                    onModelLoaded={(model) => {\r\n                        this.setState({loadProgress: 1})\r\n                        if (this.props.onModelLoaded) {\r\n                            this.props.onModelLoaded(model, this.props.sceneContext)\r\n                        }\r\n                    }}\r\n                    position={this.props.center}\r\n                    rootUrl={this.props.rootUrl}\r\n                    sceneFilename={this.props.sceneFilename}\r\n                    pluginExtension={this.props.fileExtension}\r\n                    rotation={this.props.modelRotation}\r\n                />\r\n                {(this.state.loadProgress < 1) &&\r\n                    <Mesh rotation={this.props.progressRotation} position={this.props.center}>\r\n                        <Box key=\"progress\" name=\"boxProgress\" height={this.props.scaleTo/15} width={this.props.scaleTo} depth={this.props.scaleTo/30} scaling={new Vector3(this.state.loadProgress, 1, 1)}\r\n                            position={new Vector3(this.props.scaleTo / 2, 0, this.props.scaleTo/60)}\r\n                            setPivotMatrix={ [ Matrix.Translation(-this.props.scaleTo, 0, 0) ] }\r\n                            setPreTransformMatrix={ [ Matrix.Translation(-this.props.scaleTo / 2, 0, 0) ] }>\r\n                            <StandardMaterial diffuseColor={this.props.progressBarColor} specularColor={Color3.Black()} />\r\n                        </Box>\r\n                        <Box key=\"back\" name=\"boxBack\" height={this.props.scaleTo/15} width={this.props.scaleTo} depth={this.props.scaleTo/30}\r\n                            position={new Vector3(0, 0, this.props.scaleTo/-60)}\r\n                        />\r\n                    </Mesh>\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withScene(ScaledModelWithProgress) ","import React, { Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { Engine, Scene, withBabylonJS } from 'react-babylonjs'\r\nimport { Vector3, Color3, ActionManager, SetValueAction } from '@babylonjs/core';\r\nimport { PrismCode } from 'react-prism';\r\nimport Octicon, {ArrowDown, ArrowUp} from '@githubprimer/octicons-react'\r\nimport ScaledModelWithProgress from './ScaledModelWithProgress'\r\n\r\n// import './WithModel.css'\r\n\r\nclass WithModel extends Component \r\n{\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      avocadoYPos: -1.5,\r\n      avocadoScaling: 3.0\r\n    }\r\n\r\n    this.moveAvocadoUp = this.moveAvocadoUp.bind(this);\r\n    this.moveAvocadoDown = this.moveAvocadoDown.bind(this);\r\n    this.increaseAvocadoSize = this.increaseAvocadoSize.bind(this);\r\n    this.decreaseAvocadoSize = this.decreaseAvocadoSize.bind(this);\r\n    this.onModelLoaded = this.onModelLoaded.bind(this);\r\n  }\r\n\r\n  moveAvocadoDown() {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      avocadoYPos: state.avocadoYPos - 0.5\r\n    }))\r\n  }\r\n\r\n  moveAvocadoUp() {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      avocadoYPos: state.avocadoYPos + 0.5\r\n    }))\r\n  }\r\n\r\n  increaseAvocadoSize() {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      avocadoScaling: state.avocadoScaling + 0.1\r\n    }))\r\n  }\r\n\r\n  decreaseAvocadoSize() {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      avocadoScaling: state.avocadoScaling - 0.1\r\n    }))\r\n  }\r\n\r\n  onModelLoaded(model, sceneContext) {\r\n    let mesh = model.meshes[1];\r\n    mesh.actionManager = new ActionManager(sceneContext.scene);\r\n    mesh.actionManager.registerAction(\r\n      new SetValueAction(\r\n          ActionManager.OnPointerOverTrigger,\r\n          mesh.material,\r\n          'wireframe',\r\n          true\r\n      )\r\n    )\r\n    mesh.actionManager.registerAction(\r\n      new SetValueAction(\r\n          ActionManager.OnPointerOutTrigger,\r\n          mesh.material,\r\n          'wireframe',\r\n          false\r\n      )\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let baseUrl = \"https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/\";\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-3 col-lg-3 align-top\">'pointer over' boombox to see mesh</div>\r\n          <div className=\"col-xs-3 col-lg-3 align-top\">\r\n            Move Avocado: \r\n            <Button onClick={this.moveAvocadoUp}><Octicon icon={ArrowUp}/></Button>\r\n            &nbsp;&nbsp;\r\n            <Button onClick={this.moveAvocadoDown}><Octicon icon={ArrowDown}/></Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\">\r\n              <Scene>\r\n                <arcRotateCamera name=\"camera1\" alpha={Math.PI / 2} beta={Math.PI / 2} radius={9.0} target={Vector3.Zero()} minZ={0.001} />\r\n                <hemisphericLight name=\"light1\" intensity={0.7} direction={Vector3.Up()} />\r\n                \r\n                <ScaledModelWithProgress rootUrl={`${baseUrl}BoomBox/glTF/`} sceneFilename=\"BoomBox.gltf\" scaleTo={3} \r\n                  progressBarColor={Color3.FromInts(255, 165, 0)} center={new Vector3(2.5, 0, 0)}\r\n                  onModelLoaded={this.onModelLoaded}\r\n                />\r\n\r\n                <ScaledModelWithProgress rootUrl={`${baseUrl}Avocado/glTF/`} sceneFilename=\"Avocado.gltf\" scaleTo={this.state.avocadoScaling} \r\n                  progressBarColor={Color3.FromInts(255, 165, 0)} center={new Vector3(-2.5, this.state.avocadoYPos, 0)}\r\n                />\r\n              </Scene>\r\n            </Engine>\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <pre>\r\n                <PrismCode className=\"language-jsx\">\r\n{`<Scene id=\"sample-canvas\">\r\n  <arcRotateCamera name=\"camera1\"\r\n    alpha={Math.PI / -2} beta={Math.PI / 2}\r\n    radius={0.05} target={Vector3.Zero()} minZ={0.001} />\r\n  <hemisphericLight name=\"light1\" intensity={0.7}\r\n    direction={Vector3.Up()} />\r\n  <Model sceneFilename=\"BoomBox.gltf\"\r\n    rootUrl = {\\`\\${baseUrl}BoomBox/glTF/\\`}\r\n    position = { new Vector3(0.02, 0, 0) }\r\n  />\r\n  <Model sceneFilename=\"Avocado.gltf\"\r\n    rootUrl = {\\`\\${baseUrl}Avocado/glTF/\\`}\r\n    position = { new Vector3(-0.02, this.state.avocadoYPos, 0) }\r\n    scaling={new Vector3(this.state.avocadoScaling,\r\n      this.state.avocadoScaling, this.state.avocadoScaling)}\r\n  />\r\n</Scene>`}\r\n                </PrismCode>\r\n              </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withBabylonJS(WithModel)","import React, { Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { Engine, Scene } from 'react-babylonjs'\r\n\r\nimport ScaledModelWithProgress from './ScaledModelWithProgress'\r\nimport SingleAxisRotateMeshBehavior from './SingleAxisRotateMeshBehavior'\r\nimport { Vector3, Color3, Axis } from '@babylonjs/core';\r\nimport { PrismCode } from 'react-prism';\r\nimport Octicon, {ArrowRight, ArrowLeft} from '@githubprimer/octicons-react'\r\n\r\nexport default class WithVR extends Component \r\n{\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      modelRotationY: Math.PI\r\n    }\r\n\r\n    this.spinModelClockwise = this.spinModelClockwise.bind(this);\r\n    this.spinModelCounterClockwise = this.spinModelCounterClockwise.bind(this);\r\n    this.onMeshPicked = this.onMeshPicked.bind(this);\r\n  }\r\n\r\n  spinModelClockwise() {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      modelRotationY: state.modelRotationY + 0.1\r\n    }))\r\n  }\r\n\r\n  spinModelCounterClockwise() {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      modelRotationY: state.modelRotationY - 0.1\r\n    }))\r\n  }\r\n\r\n  onMeshPicked(mesh) {\r\n    switch(mesh.name) {\r\n      case 'clockwise':\r\n        this.spinModelCounterClockwise();\r\n        break;\r\n      case 'counterClockwise':\r\n        this.spinModelClockwise();\r\n        break;\r\n      default:\r\n        console.log(`not handling mesh pick ${mesh.name}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let baseUrl = \"https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/\";\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-lg-12 align-top\">\r\n            Spin Ghettoblaster: \r\n            <Button onClick={this.spinModelClockwise}><Octicon icon={ArrowLeft}/></Button> (or click yellow box)\r\n            &nbsp;&nbsp;\r\n            <Button onClick={this.spinModelCounterClockwise}><Octicon icon={ArrowRight}/></Button> (or click orange box)\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\">\r\n              <Scene onMeshPicked={this.onMeshPicked}>\r\n                <arcRotateCamera name=\"arc\" target={ new Vector3(0, 1, 0) }\r\n                  alpha={-Math.PI / 2} beta={(0.5 + (Math.PI / 4))}\r\n                  radius={2} minZ={0.001} wheelPrecision={50} />\r\n\r\n                <directionalLight name=\"dl\" direction={new Vector3(0, -0.5, 0.5)} position = {new Vector3(0, 2, 0.5)}>\r\n                  <shadowGenerator mapSize={1024} useBlurExponentialShadowMap={true} blurKernel={32} shadowCasters={[\"counterClockwise\", \"clockwise\", \"BoomBox\"]} />\r\n                </directionalLight>\r\n\r\n                <icoSphere name=\"counterClockwise\" position={new Vector3(-0.5, 1, 0)} radius={0.2} flat={true} subdivisions={1}>\r\n                  <standardMaterial\r\n                    diffuseColor={Color3.Yellow()}\r\n                    specularColor={Color3.Black()}\r\n                  />\r\n                  <SingleAxisRotateMeshBehavior rpm={4} axis={Axis.Y} />\r\n                </icoSphere>\r\n                <ScaledModelWithProgress rootUrl={`${baseUrl}BoomBox/glTF/`} sceneFilename=\"BoomBox.gltf\" scaleTo={0.4}\r\n                  progressBarColor={Color3.FromInts(255, 165, 0)} center={new Vector3(0, 1, 0)}\r\n                  modelRotation={new Vector3(0, this.state.modelRotationY, 0)}\r\n                />\r\n                <icoSphere name=\"clockwise\" position={new Vector3(0.5, 1, 0)} radius={0.2} flat={true} subdivisions={1}>\r\n                  <standardMaterial\r\n                    diffuseColor={Color3.FromInts(255, 165, 0)}\r\n                    specularColor={Color3.Black()}\r\n                  />\r\n                  <SingleAxisRotateMeshBehavior rpm={4} axis={Axis.Y} />\r\n                </icoSphere>\r\n                <vrExperienceHelper webVROptions={{createDeviceOrientationCamera: false}} teleportEnvironmentGround={true} enableInteractions={true} />\r\n                <environmentHelper options={{enableGroundShadow: true /* true by default */, groundYBias: 1}} mainColor={Color3.FromHexString(\"#74b9ff\")} />\r\n              </Scene>\r\n            </Engine>\r\n          </div>\r\n          <div className=\"col-xs-12 col-md-6\">\r\n            <pre>\r\n                <PrismCode className=\"language-jsx\">\r\n{`<Scene id=\"sample-canvas\" onMeshPicked={(mesh, scene) => {...}}>\r\n  <arcRotateCamera />\r\n  <directionalLight name=\"dl\" direction={new Vector3(0, -0.5, 0.5)} position = {new Vector3(0, 2, 0.5)}>\r\n    <shadowGenerator mapSize={1024} useBlurExponentialShadowMap={true} blurKernel={32}\r\n      shadowCasters={[\"counterClockwise\", \"clockwise\", \"BoomBox\"]}\r\n    />\r\n  </directionalLight>\r\n  <icoSphere name=\"counterClockwise\" radius={0.2} flat={true} subdivisions={1}>\r\n    <standardMaterial diffuseColor={Color3.Yellow()} specularColor={Color3.Black()}/>\r\n  </icoSphere>\r\n  <Model rootUrl = {'/assets/BoomBox/glTF/'}\r\n    sceneFilename='BoomBox.gltf' />\r\n  <vrExperience createDeviceOrientationCamera={false} teleportEnvironmentGround={true} />\r\n  <environmentHelper enableGroundShadow={true} groundYBias={1} mainColor={Color3.FromHexString(\"#74b9ff\")} />\r\n</Scene>`}\r\n                </PrismCode>\r\n              </pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport { Engine, Scene, Skybox } from 'react-babylonjs';\r\nimport { Vector3 } from '@babylonjs/core';\r\nimport { PrismCode } from 'react-prism';\r\nimport Octicon, {ArrowRight, ArrowLeft} from '@githubprimer/octicons-react';\r\n\r\nlet globalIndex = 0 // due to closure and how observables are assigned.\r\nconst SkyboxScenes = [{\r\n  name: 'sunny day',\r\n  texture: `${process.env.PUBLIC_URL}/textures/TropicalSunnyDay`\r\n}, {\r\n  name: 'specular HDR',\r\n  texture: `${process.env.PUBLIC_URL}/textures/SpecularHDR.dds`\r\n}]\r\n\r\nfunction WithSkybox() { \r\n  const [skyboxIndex, setIndex] = useState(0);\r\n  globalIndex = skyboxIndex\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12 col-md-6 align-top\">\r\n          Change Skybox (or click a holographic button in scene):&nbsp;\r\n          <Button onClick={() => setIndex(skyboxIndex + 1)}><Octicon icon={ArrowLeft}/></Button>\r\n          &nbsp;&nbsp;\r\n          <Button onClick={() => setIndex(skyboxIndex - 1)}><Octicon icon={ArrowRight}/></Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12 col-md-6\">\r\n          <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\">\r\n            <Scene>\r\n              <hemisphericLight name=\"hemi-light\" intensity={0.7} direction={Vector3.Up()} />\r\n              <Skybox rootUrl={SkyboxScenes[Math.abs(skyboxIndex) % SkyboxScenes.length].texture} />\r\n              <arcRotateCamera target={ Vector3.Zero() } radius={10}\r\n                alpha={-Math.PI / 2} beta={(Math.PI / 2)} minZ={0.001} wheelPrecision={50}\r\n              />\r\n              <gui3DManager name=\"gui3d\">\r\n                <cylinderPanel name=\"panel\" margin={0.2}>\r\n                  {\r\n                    Array.from(new Array(50), (_, index) => index).map(number => {\r\n                      return (\r\n                        <holographicButton\r\n                          key={`btn-${number}`}\r\n                          name={`btn-name-${number}`}\r\n                          text={`btn-text-${number}`}\r\n                          onPointerClickObservable={() => setIndex(globalIndex + 1)}\r\n                        />\r\n                      )\r\n                    })\r\n                  }\r\n                </cylinderPanel>\r\n              </gui3DManager>\r\n            </Scene>\r\n          </Engine>\r\n        </div>\r\n        <div className=\"col-xs-12 col-md-6\">\r\n          <pre>\r\n              <PrismCode className=\"language-jsx\">\r\n{`<Scene id=\"sample-canvas\">\r\n<HemisphericLight name=\"light1\" intensity={0.7} direction={Vector3.Up()} />\r\n<Skybox texture={activeSkybox.texture} />\r\n<arcRotateCamera target={ Vector3.Zero() } radius={10}\r\nalpha={-Math.PI / 4} beta={(Math.PI / 2)}\r\n/>\r\n<gui3DManager name=\"gui3d\">\r\n<cylinderPanel name=\"panel\" margin={0.2}>\r\n  {\r\n    Array.from(new Array(60), (_, index) => index).map(number => {\r\n      return (\r\n        <holographicButton\r\n          key={\\`btn-\\${number}\\`}\r\n          name={\\`btn-name-\\${number}\\`}\r\n          text={\\`btn-text-\\${number}\\`}\r\n          onClick={this.next}\r\n        />\r\n      )\r\n    })\r\n  }\r\n</cylinderPanel>\r\n</gui3DManager>\r\n</Scene>`}\r\n              </PrismCode>\r\n            </pre>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WithSkybox","import React, { Component } from 'react'\nimport { Control } from '@babylonjs/gui'\nimport { Engine, Scene } from 'react-babylonjs'\nimport { Vector3, Color3, Color4, Animation, ExponentialEase, EasingFunction, Texture } from '@babylonjs/core';\n\nexport default class With2DUI extends Component \n{\n  constructor () {\n    super()\n\n    this.state = {\n      plane: undefined,\n      showModal: false,\n      clickMeshName: undefined,\n      allowedMeshes: [\n        'red box',\n        'blue box',\n        'green box'\n      ],\n      sceneClearColor: new Color4(0.5, 0.5, 0.5, 0.5)\n    }\n\n    this.meshPicked = this.meshPicked.bind(this)\n    this.setPlane = this.setPlane.bind(this)\n    // TODO: fix that bind() is needed on assignment on button pointerDown handlers\n  }\n\n  meshPicked (mesh) {\n    if (this.state.allowedMeshes.indexOf(mesh.name) !== -1) {\n      const clickedMeshName = mesh.name\n      let clickedMeshColor\n      let sceneClearColor\n      switch (clickedMeshName) {\n        case 'red box':\n          clickedMeshColor = Color3.Red().toHexString()\n          sceneClearColor = new Color4(1, 0, 0, 0.5)\n          break\n        case 'blue box':\n          clickedMeshColor = Color3.Blue().toHexString()\n          sceneClearColor = new Color4(0, 0, 1, 0.5)\n          break\n        case 'green box':\n        default:\n          clickedMeshColor = Color3.Green().toHexString()\n          sceneClearColor = new Color4(0, 1, 0, 0.5)\n          break\n      }\n\n      this.setState((state) => ({\n        ...state,\n        showModal: true,\n        clickedMeshName,\n        clickedMeshColor,\n        sceneClearColor\n      }))\n    } else {\n      console.log('ignoring clicks on:', mesh.name, this.state)\n    }\n  }\n\n  deleteSelectedMesh () {\n    let { plane } = this.state\n    let meshToDelete = plane._scene.getMeshByName(this.state.clickedMeshName)\n\n    meshToDelete.dispose()\n\n    this.setState((state) => ({\n      ...state,\n      sceneClearColor: new Color4(0.5, 0.5, 0.5, 0.5),\n      allowedMeshes: state.allowedMeshes.filter(name => name !== state.clickedMeshName)\n    }))\n\n    // TODO: if they're all 'deleted' - recreate them?\n    this.hideModal()\n  }\n\n  hideModal () {\n    let { plane } = this.state\n    if (!plane) {\n      return\n    }\n\n    let keys = []\n    keys.push({ frame: 0, value: 1 })\n    keys.push({ frame: 10, value: 0 })\n\n    var animationClose = new Animation(\n      'tv-off-1984',\n      'scaling.x',\n      10,\n      Animation.ANIMATIONTYPE_FLOAT,\n      Animation.ANIMATIONLOOPMODE_CONSTANT\n    )\n    animationClose.setKeys(keys)\n\n    let easingFunction = new ExponentialEase(9.7) // BABYLON.QuarticEase()\n    easingFunction.setEasingMode(EasingFunction.EASINGMODE_EASEINOUT)\n    animationClose.setEasingFunction(easingFunction)\n\n    plane.animations.push(animationClose)\n    plane._scene.beginAnimation(plane, 0, 100, false, 1, () => {\n      plane.dispose()\n      this.setState((state) => ({\n        ...state,\n        showModal: false,\n        plane: undefined,\n        sceneClearColor: new Color4(0.5, 0.5, 0.5, 0.5)\n      }))\n    })\n  }\n\n  setPlane (plane) {\n    this.setState((state) => ({\n      ...state,\n      plane\n    }))\n\n    if (plane._scene && plane._scene.activeCamera) {\n      let { activeCamera } = plane._scene\n\n      window.setTimeout(() => {\n        // we only need this hack because of storybook?\n        let forwardRayDirection = activeCamera.getForwardRay().direction\n        plane.position = activeCamera.position.add(forwardRayDirection.scale(1.5 / activeCamera.fov /* * forwardRay.length */))\n        plane.lookAt(activeCamera.position, 0, Math.PI, Math.PI)\n      }, 10)\n    }\n  }\n\n  render() {\n    let dialogWidth = 3;\n    let dialogHeight = 1;\n\n    return (\n      <div>\n        <div className=\"row\">\n          <div className=\"col-xs-6 col-lg-6 align-top\">\n            Click on boxes to open UI for deleting them.<br />\n            Close dialog with <span style={{fontFamily:\"FontAwesome\"}}>{'\\uf00d'}</span> or Cancel/Delete button.\n          </div>\n          <div className=\"col-xs-6 col-lg-6 align-top\">\n            How the GUI declared <span className=\"text-muted\">(see github repo for full source)</span>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-xs-12 col-md-12\">\n            <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\">\n              <Scene clearColor={this.state.sceneClearColor} onMeshPicked={this.meshPicked}>\n                <arcRotateCamera name='camera1' radius={7} beta={Math.PI / 4} alpha={Math.PI / 2} target={Vector3.Zero()} minZ={0.001} wheelPrecision={30}\n                  onViewMatrixChangedObservable={(camera) => {\n                    let { plane } = this.state\n\n                    if (plane) {\n                      let forwardRay = camera.getForwardRay()\n                      plane.position = camera.position.clone().add(forwardRay.direction.scale(1.5 / camera.fov /* * forwardRay.length */))\n                      plane.lookAt(camera.position, 0, Math.PI, Math.PI)\n                    }\n                  }}\n                />\n                <hemisphericLight name='light1' intensity={0.7} direction={Vector3.Up()} />\n                <box size={2} name='red box' position={new Vector3(-2.5, 1, 0)}>\n                  <standardMaterial name='red-mat' diffuseColor={Color3.Red()} specularColor={Color3.Black()} />\n                </box>\n                <box size={2} name='blue box' position={new Vector3(0, 1, 0)}>\n                  <standardMaterial diffuseColor={Color3.Blue()} specularColor={Color3.Black()} />\n                </box>\n                <box size={2} name='green box' position={new Vector3(2.5, 1, 0)}>\n                  <standardMaterial diffuseColor={Color3.Green()} specularColor={Color3.Black()} />\n                </box>\n                {this.state.showModal === true &&\n                <plane name='dialog' width={3} height={3 * (dialogHeight / dialogWidth)} onCreated={this.setPlane} rotation={new Vector3(0, Math.PI, 0)}>\n                  <advancedDynamicTexture\n                    name='dialogTexture'\n                    height={1024} width={1024}\n                    createForParentMesh\n                    generateMipMaps={true}\n                    samplingMode={Texture.TRILINEAR_SAMPLINGMODE}\n                  >\n                    <rectangle name='rect-1' background='white' color='#666666' height={dialogHeight / dialogWidth} width={1}\n                      scaleY={dialogWidth} scaleX={1} thickness={2} cornerRadius={12} >\n                      <stackPanel name='sp-1'>\n                        <rectangle name='header-rectangle' height='70px'\n                          verticalAlignment={Control.HORIZONTAL_ALIGNMENT_CENTER}\n                          horizontalAlignment={Control.HORIZONTAL_ALIGNMENT_LEFT}\n                        >\n                          <stackPanel name='header-stack-panel' isVertical={false} width='100%'>\n                            <textBlock name='selection-made' text='Selection Made' color='black' fontSize={28} fontStyle='bold' paddingLeft='20px'\n                              textHorizontalAlignment={Control.HORIZONTAL_ALIGNMENT_LEFT}\n                              textVerticalAlignment={Control.VERTICAL_ALIGNMENT_CENTER}\n                            />\n                            <babylon-button name='close-icon' width='1000px' paddingLeft='950px' height='80px' onPointerDownObservable={this.hideModal.bind(this)}>\n                              <textBlock text={'\\uf00d'} fontFamily='FontAwesome' fontStyle='bold' fontSize={24} color='black'\n                                textHorizontalAlignment={Control.HORIZONTAL_ALIGNMENT_RIGHT}\n                                textVerticalAlignment={Control.VERTICAL_ALIGNMENT_CENTER}\n                              />\n                            </babylon-button>\n                          </stackPanel>\n                        </rectangle>\n                        <rectangle name='body-rectangle' height='200px' thickness={2} color='#EEEEEE'>\n                          <stackPanel name='sp-3'>\n                            <textBlock name='description' key={`body-${this.state.clickedMeshName}`} text={`You have clicked on '${this.state.clickedMeshName}' .\\n....${this.state.allowedMeshes.length} remaining...`}\n                              color='black' fontSize={28} textWrapping height='100px'\n                              textHorizontalAlignment={Control.HORIZONTAL_ALIGNMENT_LEFT}\n                              textVerticalAlignment={Control.VERTICAL_ALIGNMENT_TOP}\n                              paddingLeft='10px' paddingTop='10px'\n                            />\n                            {\n                              this.state.allowedMeshes.map(allowedMesh => (\n                                <textBlock key={`opt--${this.state.clickedMeshName}-${allowedMesh}`} text={'• ' + allowedMesh} color='black' fontSize={28} height={`${90 / this.state.allowedMeshes.length}px`}\n                                  textHorizontalAlignment={Control.HORIZONTAL_ALIGNMENT_LEFT}\n                                  textVerticalAlignment={Control.VERTICAL_ALIGNMENT_TOP}\n                                  paddingLeft='20px'\n                                />\n                              ))\n                            }\n                          </stackPanel>\n                        </rectangle>\n                        <stackPanel name='footer-sp' height='80px' paddingTop='10px' paddingBottom='10px' isVertical={false} horizontalAlignment={Control.HORIZONTAL_ALIGNMENT_RIGHT} verticalAlignment={Control.VERTICAL_ALIGNMENT_TOP} >\n                          <babylon-button name='cancel-button' background='#6c757d' width='290px' height='60px' cornerRadius={10} onPointerDownObservable={this.hideModal.bind(this)}>\n                            <textBlock name='cancel-text' text='Cancel' fontSize={28} fontStyle='bold' color='white' />\n                          </babylon-button>\n                          <babylon-button name='delete-button' background={this.state.clickedMeshColor} paddingLeft='50px' paddingRight='30px' width='350px' height='60px'\n                            cornerRadius={10} onPointerDownObservable={this.deleteSelectedMesh.bind(this)}>\n                            <textBlock name='cancel-text' text={`Delete '${this.state.clickedMeshName}'`} fontSize={28} fontStyle='bold' color='white' \n                              textVerticalAlignment={Control.VERTICAL_ALIGNMENT_CENTER}\n                            />\n                          </babylon-button>\n                        </stackPanel>\n                      </stackPanel>\n                    </rectangle>\n                  </advancedDynamicTexture>\n                </plane>\n                }\n                <vrExperienceHelper webVROptions={{ createDeviceOrientationCamera: false }} enableInteractions />\n              </Scene>\n            </Engine>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Engine, Scene } from 'react-babylonjs'\nimport { Color3, FreeCamera, Vector3, ArcRotateCamera, DefaultRenderingPipeline, HemisphericLight, DepthOfFieldEffectBlurLevel, PBRMetallicRoughnessMaterial, CubeTexture, Mesh } from '@babylonjs/core';\nimport { Control, TextBlock, Slider, StackPanel, AdvancedDynamicTexture } from '@babylonjs/gui'\nimport { PrismCode } from 'react-prism';\n\nfunction meshPicked(mesh) {\n  console.log('mesh picked:', mesh)\n}\n\nfunction onSceneMount(e) {\n  const { canvas, scene } = e\n\n  scene.clearColor = new Color3(0.5,0.5,0.5)\n  var camera = new FreeCamera(\"camera1\", new Vector3(0, 0.3, -0.7), scene);\n  camera.speed = 0.01;\n  camera.minZ = 0.001;\n  scene.activeCameras.push(camera);\n  camera.attachControl(canvas, true);\n  var light = new HemisphericLight(\"light1\", new Vector3(0, 1, 0), scene);\n  light.intensity = 0.7;\n  var pbr = new PBRMetallicRoughnessMaterial(\"pbr\", scene);\n  pbr.environmentTexture = CubeTexture.CreateFromPrefilteredData(\"textures/environment.dds\", scene);\n  var gridSize = 4;\n  for(var i=0;i<gridSize;i++){\n      for(var j=0;j<10;j++){\n          var sphereMat = pbr.clone();\n          sphereMat.metallic = 0.1;\n          sphereMat.roughness = (i/gridSize)/3;\n          sphereMat.baseColor = Color3.White().scale(1-(j/10))\n          var sphere = Mesh.CreateSphere(\"sphere\", 16, 0.2, scene);\n          sphere.material = sphereMat;\n          sphere.position.y = i*0.3;\n          sphere.position.x = 0.3;\n          sphere.position.z = j*0.4;\n\n          var cubeMat = pbr.clone();\n          cubeMat.metallic = 0.6;\n          cubeMat.roughness = (i/gridSize)/3;\n          cubeMat.baseColor = Color3.White().scale(1-(j/10))\n          var box = Mesh.CreateBox(\"box\", 0.2, scene);\n          box.material = cubeMat;\n          box.position.y = i*0.3;\n          box.position.x = -0.3;\n          box.position.z = j*0.4;\n      }\n  }\n  var knot = Mesh.CreateTorusKnot(\"knot\", 0.2, 0.05, 128, 64, 2, 3, scene);\n  knot.material = pbr;\n  knot.position.set(0, 0.3, 8);\n\n  // Create default pipeline and enable dof with Medium blur level\n  var pipeline = new DefaultRenderingPipeline(\"default\", true, scene, [scene.activeCamera]);\n  pipeline.depthOfFieldBlurLevel = DepthOfFieldEffectBlurLevel.Medium;\n  pipeline.depthOfFieldEnabled = true;\n  pipeline.depthOfField.focalLength = 180;\n  pipeline.depthOfField.fStop = 3;\n  pipeline.depthOfField.focusDistance = 2250;\n  var moveFocusDistance = true;\n\n  //add UI to adjust pipeline.depthOfField.fStop, kernelSize, focusDistance, focalLength\n  var bgCamera = new ArcRotateCamera(\"BGCamera\", Math.PI / 2 + Math.PI / 7, Math.PI / 2, 100,\n      new Vector3(0, 20, 0),\n      scene);\n  bgCamera.layerMask = 0x10000000;\n  var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n  advancedTexture.layer.layerMask = 0x10000000;\n  var UiPanel = new StackPanel();\n  UiPanel.width = \"220px\";\n  UiPanel.fontSize = \"14px\";\n  UiPanel.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n  UiPanel.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n  advancedTexture.addControl(UiPanel);\n  var params = [\n      {name: \"fStop\", min:1.4,max:32},\n      {name: \"focusDistance\", min:0,max:5000},\n      {name: \"focalLength\", min:0,max:500}\n  ]\n  params.forEach(function(param){\n      var header = new TextBlock();\n      header.text = param.name+\":\"+pipeline.depthOfField[param.name].toFixed(2);\n      header.height = \"40px\";\n      header.color = \"black\";\n      header.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n      header.paddingTop = \"10px\";\n      UiPanel.addControl(header); \n      var slider = new Slider();\n      slider.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n      slider.minimum = param.min;\n      slider.maximum = param.max;\n      slider.color = \"#636e72\";\n      slider.value = pipeline.depthOfField[param.name];\n      slider.height = \"20px\";\n      slider.width = \"205px\";\n      UiPanel.addControl(slider); \n      slider.onValueChangedObservable.add(function(v){\n          pipeline.depthOfField[param.name] = v;\n          header.text = param.name+\":\"+pipeline.depthOfField[param.name].toFixed(2);\n          moveFocusDistance = false;\n      }) \n  })\n  scene.activeCameras = [scene.activeCamera, bgCamera];\n\n  // Move depth of field focus distance automatically at the start\n  scene.onBeforeRenderObservable.add(function(){\n      if(moveFocusDistance){\n          pipeline.depthOfField.focusDistance = 600 + (4000 * (Math.sin((new Date()).getTime()/1000)+1)/2)\n      }\n  })\n\n  scene.getEngine().runRenderLoop(() => {\n      if (scene) {\n          scene.render();\n      }\n  });\n}\n\nfunction NonDeclarative() {\nreturn (\n  <div>\n    <div className=\"row\">\n      <div className=\"col-xs-12 col-lg-12 align-top\">\n        You can mix declarative with non-declarative.  This example just copies the \"Depth of Field\" sample playground from the <a href=\"https://doc.babylonjs.com/how_to/using_default_rendering_pipeline\" target=\"_new\">default rendering pipeline documentation</a>.\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-xs-12 col-md-6\">\n        <Engine antialias={true} adaptToDeviceRatio={true} canvasId=\"sample-canvas\">\n          <Scene onMeshPicked={meshPicked} onSceneMount={onSceneMount} />\n        </Engine>\n      </div>\n      <div className=\"col-xs-12 col-md-6\">\n        <pre>\n            <PrismCode className=\"language-jsx\">\n{`// If you import Scene from '@babylonjs/core' then make sure to alias one of them.\nimport React, { Component } from 'react'\nimport { Scene } from 'react-babylonjs'\nimport { Vector3, ArcRotateCamera, ... } from '@babylonjs/core';\n\nfunction onSceneMount(e) {\n  const { canvas, scene } = e\n\n  // Your code here (ie: playground code could go here)...  \n  scene.getEngine().runRenderLoop(() => {\n      if (scene) {\n          scene.render();\n      }\n  });\n}\n\nfunction NonDeclarative() {\n  return (\n    <Engine canvasId=\"sample-canvas\">\n      <Scene onSceneMount={onSceneMount} />\n    </Engine>\n  );\n}`}\n              </PrismCode>\n            </pre>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NonDeclarative","import React from 'react'\r\n\r\nconst Home = () => (\r\n  <div>   \r\n    <p>There are examples for Virtual Reality, 3D models, 3D UI controls, Skybox and mesh creations using BabylonJS on WebGL running in a React App.</p>\r\n\r\n    <p><strong>react-babylonjs</strong> is a react renderer using Fiber and has large API coverage by using code generation.</p>\r\n\r\n    <p>Interesting part is the UI 2D, where a WebGL texture is dynamically updating from props - best experienced in VR mode :)</p>\r\n\r\n    <p>\r\n    Also, full HMR experience with browser udpating as you update your application in the editor.\r\n    <img src=\"https://raw.githubusercontent.com/brianzinn/react-babylonjs/master/media/react-babylonjs-hmr.gif\" width=\"90%\" alt=\"React BabylonJS HMR\" />\r\n    </p>\r\n    \r\n    <p className=\"text-muted small\">More coming soon...</p>\r\n  </div>\r\n)\r\n\r\nexport default Home","import * as React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Layout from './layout/components';\r\nimport DefaultPlayground from './defaultPlayground';\r\nimport DragNDrop from './dragNdrop'\r\nimport WithProps from  './withProps/components/WithProps'; // has reducers, too\r\nimport WithModel from  './withModel';\r\nimport WithVR from  './withVR';\r\nimport WithSkybox from  './withSkybox';\r\nimport With2DUI from './with2DUI'\r\nimport NonDeclarative from './nonDeclarative'\r\nimport Home from './home/components'\r\n\r\nexport const routes = (\r\n    <Layout sidebarCollapsed={false}>\r\n        <Switch>\r\n            <Route exact={true} path={`${process.env.PUBLIC_URL}/`} component={Home} />\r\n            <Route path={`${process.env.PUBLIC_URL}/defaultPlayground`} component={DefaultPlayground} />\r\n            <Route path={`${process.env.PUBLIC_URL}/dragNdrop`} component={DragNDrop} />\r\n            <Route path={`${process.env.PUBLIC_URL}/withProps`} component={WithProps} />\r\n            <Route path={`${process.env.PUBLIC_URL}/withModel`} component={WithModel} />\r\n            <Route path={`${process.env.PUBLIC_URL}/withVR`} component={WithVR} />\r\n            <Route path={`${process.env.PUBLIC_URL}/withSkybox`} component={WithSkybox} />\r\n            <Route path={`${process.env.PUBLIC_URL}/with2DUI`} component={With2DUI} />\r\n            <Route path={`${process.env.PUBLIC_URL}/nonDeclarative`} component={NonDeclarative} />\r\n            <Route component={Home} />\r\n        </Switch>\r\n    </Layout>\r\n);","import React from 'react'\r\nimport { ConnectedRouter } from 'connected-react-router'\r\n\r\nimport { routes } from './routes'\r\n\r\nconst App = ({ history }) => ( /* receive history object via props */\r\n    <ConnectedRouter history={history} children={routes} />\r\n)\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\n// import your Module reducers here and combine them\r\nimport withProps from './withProps/reducers'\r\nimport layout from './layout/reducers'\r\n\r\nconst rootReducer = (history) => combineReducers({\r\n\trouter: connectRouter(history),\r\n\twithProps,\r\n\tlayout\r\n});\r\n\r\nexport default rootReducer;","import { createStore, compose, applyMiddleware } from 'redux';\r\n\r\nimport { createBrowserHistory } from 'history'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\n// import reduxWiretap from 'redux-wiretap'\r\n\r\nimport rootReducer from './rootReducer';\r\n\r\n// export `history` to use in index.js, we are using `createBrowserHistory`\r\n// we need to add options here for gh-pages if we want to use it.\r\nexport const history = createBrowserHistory();\r\n\r\n// Build the middleware for intercepting and dispatching navigation actions\r\nconst store = createStore(\r\n  rootReducer(history), // new root reducer with router state\r\n  compose(\r\n    applyMiddleware(\r\n      routerMiddleware(history), // for dispatching history actions\r\n      // reduxWiretap\r\n      // other middleware ...\r\n    ),\r\n  ),\r\n)\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./rootReducer', () => {\r\n    store.replaceReducer(connectRouter(history)(rootReducer))\r\n  })\r\n}\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store, { history } from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App history={history} />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}